<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Markdown常用语法</title>
    <url>/2024/08/15/Markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Hexo + Github搭建个人博客教程</title>
    <url>/2024/03/13/My-New-Post/</url>
    <content><![CDATA[<h1 id="这篇博客将会带来Hexo-Github搭建个人博客网站的教程"><a href="#这篇博客将会带来Hexo-Github搭建个人博客网站的教程" class="headerlink" title="这篇博客将会带来Hexo+Github搭建个人博客网站的教程"></a>这篇博客将会带来Hexo+Github搭建个人博客网站的教程</h1><hr>
<p><strong>首先我们需要在自己电脑上配置好  <strong>git</strong>  , <strong>node.js</strong>  和  <strong>npm</strong></strong><br>    1. <strong>git,node.js和npm</strong>的<strong>安装</strong>与<strong>配置</strong><br>首先我们到git官网<a class="link"   href="https://git-scm.com/"  title="点击连接直达">Git官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://huihuihuihui1.github.io/imgs/Download.png"
                      alt="这是图片"
                ><br>找到Download下载<br>根据自己的系统版本选择下载<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://huihuihuihui1.github.io/imgs/Git.png"
                      alt="这是图片"
                ><br><a class="link"   href="https://blog.csdn.net/mukes/article/details/115693833"  title="点击连接直达">Git安装教程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>    2. node和npm也跟着教程下载，链接如下：<br><a class="link"   href="https://blog.csdn.net/qq_39308408/article/details/97754889"  title="点击链接直达">node.js和npm安装教程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<blockquote>
<p>  <strong>查看git版本</strong>  </p>
<blockquote>
<pre><code> git -v  
</code></pre>
</blockquote>
<p>  <strong>查看node版本</strong>  </p>
<blockquote>
<pre><code> node -v  
</code></pre>
</blockquote>
<p>  <strong>查看npm版本</strong>  </p>
<blockquote>
<pre><code> npm -v      
</code></pre>
</blockquote>
</blockquote>
<h2 id="Github仓库创建"><a href="#Github仓库创建" class="headerlink" title="Github仓库创建"></a><strong>Github仓库创建</strong></h2><p>进入<a class="link"   href="https://github.com/" >Github官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>    1.  <strong>注册GitHub账号</strong>（已有账号可直接进行下一步）<br>选择sign up，跟着引导走，注册之后邮箱会收到一封Github的邮件，点击Github的链接确认注册<br>    2.  <strong>创建仓库</strong><br>进入个人主页，选择<strong>Creat repository</strong>   </p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">**注意**  </span><br><span class="line">选择public  </span><br><span class="line">仓库名应为：用户名.github.io(这是博客域名)  </span><br></pre></td></tr></table></figure></div>

<h2 id="连接GitHub仓库"><a href="#连接GitHub仓库" class="headerlink" title="连接GitHub仓库"></a><strong>连接GitHub仓库</strong></h2><ol>
<li>然后新建一个空白文件夹可命名为Blog在文件夹中右键，选择<strong>Open Git Bash here</strong></li>
<li>输入代码连接GitHub仓库  <div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;GitHub 用户名&quot;  </span><br><span class="line">   git config --global user.email &quot;GitHub 邮箱&quot;  </span><br></pre></td></tr></table></figure></div></li>
</ol>
<p><strong>创建SSH</strong><br>输入  </p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;GitHub 邮箱&quot;  </span><br></pre></td></tr></table></figure></div>
<p>然后一路回车。</p>
<p><strong>添加密钥</strong><br>进入 <strong>[C:\Users\用户名.ssh]</strong> 目录，用记事本打开公钥<strong>id_rsa.pub</strong>文件并复制里面的内容。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://huihuihuihui1.github.io/imgs/Photo1.png"
                      alt="这是图片"
                ><br>打开GitHub进入<strong>Settings</strong>页面，选择左边栏的<strong>SSH and GPG keys</strong><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://huihuihuihui1.github.io/imgs/Photo2.png"
                      alt="这是图片"
                ><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://huihuihuihui1.github.io/imgs/Photo3.png"
                      alt="这是图片"
                ><br>点击<strong>New SSH key</strong>。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://huihuihuihui1.github.io/imgs/Photo4.png"
                      alt="这是图片"
                ><br><strong>Title</strong>随便写，粘贴复制的<strong>id_rsa.pub</strong>内容到<strong>Key</strong>中，点击<strong>Add SSH key</strong>完成添加。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://huihuihuihui1.github.io/imgs/Photo5.png"
                      alt="这是图片"
                ><br><strong>验证连接：</strong><br>打开 <strong>Git Bash</strong>，输入  </p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com  </span><br></pre></td></tr></table></figure></div>

<p>出现 <strong>“Are you sure……”</strong>，输入 <strong>yes</strong> 回车确认。<br>显示  <strong>“Hi xxx! You’ve successfully……”</strong>  即连接成功。</p>
<h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a><strong>安装hexo</strong></h3><p>在<strong>Git Bash</strong>下载<strong>hexo</strong>程序  </p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli  </span><br></pre></td></tr></table></figure></div>

<p>若下载失败或速度太慢可使用淘宝镜像，输入以下代码连接  </p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm config set registry https://registry.npmmirror.com  </span><br></pre></td></tr></table></figure></div>

<p>可使用以下代码查看是否正确连接  </p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm config get registry  </span><br></pre></td></tr></table></figure></div>

<p>连接成功后可加快下载速度  </p>
<h3 id="hexo的初始化和本地预览"><a href="#hexo的初始化和本地预览" class="headerlink" title="hexo的初始化和本地预览"></a><strong>hexo</strong>的初始化和本地预览</h3><p><strong>初始化并安装所需组件：</strong>  </p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init      # 初始化  </span><br><span class="line">npm install    # 安装组件  </span><br></pre></td></tr></table></figure></div>

<p><strong>完成后依次输入以下命令，在本地预览：</strong>  </p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g # 生成页面  </span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s # 启动预览  </span><br></pre></td></tr></table></figure></div>

<p><strong>访问 <a class="link"   href="https://localhost:4000/" >https://localhost:4000 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，出现hexo默认页面，本地博客安装成功</strong>  </p>
<h3 id="部署hexo页面到GitHub-Pages"><a href="#部署hexo页面到GitHub-Pages" class="headerlink" title="部署hexo页面到GitHub Pages"></a>部署hexo页面到GitHub Pages</h3><p><strong>安装 hexo-deployer-git:</strong>(上传需使用的插件)  </p>
<blockquote>
<pre><code>  npm install hexo-deployer-git --save  
</code></pre>
</blockquote>
<p><strong>修改_config.yml文件末尾的Deployment部分如下</strong>  </p>
<blockquote>
<pre><code>  deploy:  
    type: git  
    repository: git@github.com:用户名/用户名.github.io.git  
    branch: main  
</code></pre>
</blockquote>
<p><strong>注：</strong>_config.yml文件可使用记事本打开，修改完成后保存。<br>完成后运行以下命令，将网站上传部署到Github Pages。  </p>
<blockquote>
<pre><code>  hexo d  
</code></pre>
</blockquote>
<p>这样我们就能直接用以下链接找到我们创建的个人博客  </p>
<blockquote>
<pre><code>  https://用户名.github.io
</code></pre>
</blockquote>
]]></content>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2024/08/13/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
  </entry>
  <entry>
    <title>自动化工具AutoHotKey推荐</title>
    <url>/2024/08/15/%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7AutoHotKey%E6%8E%A8%E8%8D%90/</url>
    <content><![CDATA[<h1 id="自动化工具AutoHotKey推荐"><a href="#自动化工具AutoHotKey推荐" class="headerlink" title="自动化工具AutoHotKey推荐"></a>自动化工具AutoHotKey推荐</h1><h2 id="1-自动化工具AutoHotKey"><a href="#1-自动化工具AutoHotKey" class="headerlink" title="1. 自动化工具AutoHotKey"></a>1. 自动化工具AutoHotKey</h2><ul>
<li>autohotkey是一款开源的自动化工具，可以用来模拟键盘和鼠标操作，实现自动化任务。</li>
<li>它可以用来实现各种自动化任务，比如自动填写表单、自动点击按钮、自动滚动页面等等。</li>
<li>autohotkey的语法比较简单，容易上手，而且功能强大，可以满足各种自动化需求。</li>
<li><strong><a class="link"   href="https://www.autohotkey.com/" >下载连接 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></strong></li>
</ul>
<hr>
<h2 id="2-推荐理由"><a href="#2-推荐理由" class="headerlink" title="2. 推荐理由"></a>2. 推荐理由</h2><ul>
<li>autohotkey是一款开源的自动化工具，可以用来模拟键盘和鼠标操作，实现自动化任务。</li>
<li>它可以用来实现各种自动化任务，比如自动填写表单、自动点击按钮、自动滚动页面等等。</li>
<li>autohotkey的语法比较简单，容易上手，而且功能强大，可以满足各种自动化需求。</li>
<li>autohotkey的社区非常活跃，有很多现成的脚本可以参考，也可以自己编写脚本。</li>
<li>autohotkey的脚本可以很容易地移植到其他操作系统上，比如Windows、Mac、Linux等等。</li>
</ul>
<hr>
<h2 id="3-下载安装"><a href="#3-下载安装" class="headerlink" title="3. 下载安装"></a>3. 下载安装</h2><ul>
<li>安装<a class="link"   href="https://www.autohotkey.com/" >autohotkey <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br> 按照官网说明下载安装autohotkey，安装过程全部next就行。<br> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/./imgs/autohotkey%E5%AE%98%E7%BD%91.png"
                      alt="autohotkey官网"
                ></li>
<li>下载autohotkey的编译器<br> 可在主流编译器中添加autohotkey或ahk插件<br> 或者可以下载adventure，adventure是一款用于autohotkey脚本的编译器。或者下载Adventure-CN，Adventure-CN是河许人在adventure编辑器基础上翻译开发更贴近中文开发者的编辑器，目标是使中文Autohotkey开发者更轻松，更便捷的开发Autohotkey脚本。<br> 下载地址：<a class="link"   href="https://www.autoahk.com/archives/15290" >Adventure-CN <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>  若下载地址不可用，可联系笔者获取</li>
</ul>
<hr>
<h2 id="4-代码演示"><a href="#4-代码演示" class="headerlink" title="4. 代码演示"></a>4. 代码演示</h2><h2 id="例如"><a href="#例如" class="headerlink" title=" 例如"></a> 例如<br><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">; 按下F1键，自动打开记事本</span><br><span class="line">F1::</span><br><span class="line">Run notepad.exe</span><br><span class="line">return</span><br></pre></td></tr></table></figure></div><br><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">; 按下F2键，自动点击指定位置</span><br><span class="line">F2::</span><br><span class="line">Click 100, 200</span><br><span class="line">return</span><br></pre></td></tr></table></figure></div><br><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">; 按下F3键，自动滚动页面</span><br><span class="line">F3::</span><br><span class="line">WheelDown</span><br><span class="line">return</span><br></pre></td></tr></table></figure></div><br><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">#Warn</span><br><span class="line">; 创建可视化窗口</span><br><span class="line">MyGUI := GUI()</span><br><span class="line">;创建文本提示</span><br><span class="line">MyGUI.add(&quot;Text&quot;,,&quot;请输入点击点的x，y坐标&quot;)</span><br><span class="line">;创建输入框</span><br><span class="line">MyGUI.add(&quot;Edit&quot;,&quot;vEdit1&quot;)</span><br><span class="line">MyGUI.add(&quot;Edit&quot;,&quot;vEdit2&quot;)</span><br><span class="line">;创建按钮</span><br><span class="line">Btn1 := MyGUI.add(&quot;Button&quot;,&quot;&quot;,&quot;开始点击&quot;)</span><br><span class="line">;显示窗口</span><br><span class="line">MyGUI.show()</span><br><span class="line">;点击按钮-&gt;响应函数</span><br><span class="line">Btn1.OnEvent(&quot;Click&quot;, 自动点击)</span><br><span class="line">;响应函数</span><br><span class="line">自动点击(*)</span><br><span class="line">&#123;</span><br><span class="line">    ;将窗口中的变量储存</span><br><span class="line">    saved := MyGUI.submit()</span><br><span class="line">    ;鼠标移动到相应坐标，最后一个参数为速度，0最快</span><br><span class="line">    MouseMove saved.Edit1, saved.Edit2, 20</span><br><span class="line">    ;点击，默认left左键点击</span><br><span class="line">    Click</span><br><span class="line">    ;</span><br><span class="line">    MyGUI.show()</span><br><span class="line">    Return</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></h2><h2 id="5-推荐链接"><a href="#5-推荐链接" class="headerlink" title="5. 推荐链接"></a>5. 推荐链接</h2><p><a class="link"   href="https://www.autohotkey.com/" >Autohotkey官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><a class="link"   href="https://www.autohotkey.com/docs/v1/" >autohotkey官方社区v1.1 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><a class="link"   href="https://www.autohotkey.com/docs/v2/" >autohotkey官方社区v2 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><a class="link"   href="https://www.autoahk.com/" >autohotkey中文社区 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <tags>
        <tag>工具推荐</tag>
        <tag>Autohotkey</tag>
      </tags>
  </entry>
  <entry>
    <title>autohotkey学习笔记1</title>
    <url>/2024/10/16/autohotkey%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/</url>
    <content><![CDATA[<p>在学习使用autohotkey中，常常有些命令不熟悉，会忘记或者不理解。就在这里做个笔记，方便以后查阅。</p>
<h1 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h1><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>单行注释：<code>;</code></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">; 这是一个单行注释</span><br></pre></td></tr></table></figure></div>
<p>多行注释：<code>/* */</code></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line">这是一个多行注释</span><br><span class="line">*/</span><br></pre></td></tr></table></figure></div>
<p>快捷键</p>
<p>快捷键由一个或多个修饰键和一个键组成，如<code>Ctrl+A</code>、<code>Alt+Tab</code>等。修饰键可以是<code>Ctrl</code>、<code>Alt</code>、<code>Shift</code>、<code>Win</code>等。键可以是字母、数字、空格、制表符、回车键、退格键等。快捷键可以用<code>^</code>、<code>!</code>、<code>+</code>、<code>#</code>等符号表示修饰键，如<code>^a</code>表示Ctrl+A，<code>!a</code>表示Alt+A，<code>+a</code>表示Shift+A，<code>#a</code>表示Win+A。<br>快捷键可以用<code>Send</code>命令发送</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">如 Send ^a 表示发送Ctrl+A。</span><br></pre></td></tr></table></figure></div>
<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>变量名必须以字母或下划线开头，后面可以是字母、数字或下划线。变量名区分大小写，如<code>a</code>和<code>A</code>是两个不同的变量。变量名不能是AutoHotkey的保留字，如<code>If</code>、<code>While</code>、<code>Loop</code>等。  </p>
<p>变量赋值：<code>变量名 := 变量值</code></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">如 a := 1 表示将1赋值给变量a。</span><br></pre></td></tr></table></figure></div>
<p>变量取值：<code>变量名</code></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">如 MsgBox %a% 表示弹出变量a的值。</span><br></pre></td></tr></table></figure></div>
<p>变量运算：<code>变量名 运算符 变量名</code></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">如 a := 1 b := 2 c := a + b 表示将a和b的值相加，结果赋值给变量c。</span><br></pre></td></tr></table></figure></div>
<p>变量比较：<code>变量名 比较运算符 变量名</code></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">如 a := 1 b := 2 If a &gt; b MsgBox &quot;a大于b&quot; 表示如果a大于b，则弹出提示框。</span><br><span class="line">比较运算符有`&gt;`、`&lt;`、`&gt;=`、`&lt;=`、`==`、`!=`。</span><br></pre></td></tr></table></figure></div>

<p>字符串<br>字符串可以用单引号或双引号括起来，如<code>&quot;Hello&quot;</code>或<code>&#39;Hello&#39;</code>。字符串中可以包含转义字符，如<code>\n</code>表示换行，<code>\t</code>表示制表符。字符串可以连接起来，如<code>&quot;Hello&quot; . &quot;World&quot;</code>。<br> 字符串可以用<code>Len</code>函数获取长度，如<code>Len(&quot;Hello&quot;)</code>。<br> 字符串可以用<code>SubStr</code>函数截取子串，如<code>SubStr(&quot;HelloWorld&quot;, 1, 5)</code>。<br> 字符串可以用<code>Trim</code>函数去除前后空格，如<code>Trim(&quot; Hello &quot;)</code>。</p>
<p> 关于GUI的使用v2版本<br> 创建一个GUI窗口</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">MyGUI := GUI()</span><br></pre></td></tr></table></figure></div>
<p><code>add的函数值依次为：控件类型、位置、大小、文本内容</code><br>添加一个标签</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">MyGUI.add(&quot;Label&quot;, &quot;x=100, y=50, w=100, h=20&quot;, &quot;Hello World&quot;)</span><br></pre></td></tr></table></figure></div>
<p>添加一个文本框</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">MyGUI.add(&quot;Text&quot;, &quot;x=100, y=100, w=200, h=20&quot;)</span><br></pre></td></tr></table></figure></div>
<p>添加一个按钮</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">MyGUI.add(&quot;Button&quot;, &quot;x=100, y=150, w=100, h=20&quot;, &quot;Click Me&quot;)</span><br></pre></td></tr></table></figure></div>
<p>显示窗口</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">MyGUI.Show()</span><br></pre></td></tr></table></figure></div>
<p>获取文本框的值</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">MyGUI.GetText(&quot;Text&quot;)</span><br></pre></td></tr></table></figure></div>
<p>获取按钮的值</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">MyGUI.GetText(&quot;Button&quot;)</span><br></pre></td></tr></table></figure></div>]]></content>
      <tags>
        <tag>学习笔记</tag>
        <tag>autohotkey</tag>
      </tags>
  </entry>
  <entry>
    <title>始终置顶便签小软件</title>
    <url>/2024/12/25/%E5%A7%8B%E7%BB%88%E7%BD%AE%E9%A1%B6%E4%BE%BF%E7%AD%BE%E5%B0%8F%E8%BD%AF%E4%BB%B6/</url>
    <content><![CDATA[<p>我在平时使用电脑中，有时会因为太多信息干扰导致很容易就忘记原本的工作计划，需要能始终置顶在屏幕上的便签，而且不会遮挡屏幕下方的文字。这里我想到使用autohotkey来实现这个小功能。</p>
<h3 id="首先分析"><a href="#首先分析" class="headerlink" title="首先分析"></a>首先分析</h3><p>如果要实现这样一个小软件，我的想法是，创建一个记事本，然后使用提示窗读取记事本中的信息，然后把提示窗透明。</p>
<p>1.创建记事本</p>
<ul>
<li><p>因为每天都需要创建新的记事本，手动操作麻烦，这就可以写进代码里。当我们想写每日的便签的时候，代码先判断目录下有没有今天的便签，没有的话就先创建后打开，有的话就直接打开。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">; 定义文件路径和日期格式</span><br><span class="line">FilePath := A_ScriptDir &quot;\&quot;</span><br><span class="line">DateFormat := &quot;yyyy-MM-dd&quot;</span><br><span class="line"></span><br><span class="line">CreateNote:</span><br><span class="line">    ; 获取当前日期并构建文件名</span><br><span class="line">    FormatTime, CurrentDate,, %DateFormat%</span><br><span class="line">    NoteFile := FilePath . CurrentDate &quot;.txt&quot;</span><br><span class="line">  </span><br><span class="line">    ; 检查文件是否存在，如果不存在则创建</span><br><span class="line">    if (!FileExist(NoteFile)) &#123;</span><br><span class="line">        FileAppend,, %NoteFile%  ; 创建空文件</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    ; 打开文件</span><br><span class="line">    Run, %NoteFile%</span><br><span class="line">Return</span><br><span class="line"></span><br><span class="line">; 获取当前日期并构建文件名</span><br><span class="line">  FormatTime, CurrentDate,, %DateFormat%</span><br><span class="line">  NoteFile := FilePath . CurrentDate &quot;.txt&quot;</span><br></pre></td></tr></table></figure></div></li>
</ul>
<p>2.创建提示窗</p>
<ul>
<li><p>使用提示窗来显示便签内容，并且设置透明度。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">; 创建提示框，并设置为始终在最顶层，背景透明</span><br><span class="line">      Gui, Note: +AlwaysOnTop +Caption +ToolWindow +Owner</span><br><span class="line">      Gui, Note: Font, s12, Verdana</span><br><span class="line">      Gui, Note: Color, FFFFFF  ; 设置半透明颜色</span><br><span class="line">      Gui, Note: Add, Text,, %NoteContent%</span><br><span class="line">      Gui, Note: Show, x750 y0  NoActivate, 今日便签</span><br><span class="line">      </span><br><span class="line">      ; 设置透明度</span><br><span class="line">      WinSet, Transparent, 200, 今日便签  ; 设置窗口透明度，255为不透明，0为完全透明</span><br><span class="line">      </span><br><span class="line">      ; 允许拖动整个窗口</span><br><span class="line">      ;Gui, Note: +Drag</span><br></pre></td></tr></table></figure></div></li>
</ul>
<p>3.读取便签内容</p>
<ul>
<li><p>使用提示窗读取便签内容，并且设置字体和大小。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">if (FileExist(NoteFile)) &#123;</span><br><span class="line">      ; 读取文件内容</span><br><span class="line">      FileRead, NoteContent, %NoteFile%</span><br></pre></td></tr></table></figure></div></li>
</ul>
<p>最后，总代码实现：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">#Persistent</span><br><span class="line">#SingleInstance, Force</span><br><span class="line"></span><br><span class="line">; 定义文件路径和日期格式</span><br><span class="line">FilePath := A_ScriptDir &quot;\&quot;</span><br><span class="line">DateFormat := &quot;yyyy-MM-dd&quot;</span><br><span class="line"></span><br><span class="line">; 创建GUI</span><br><span class="line">Gui, Add, Button, gCreateNote w100 h30, 编辑</span><br><span class="line">Gui, Add, Button, gOpenNote w100 h30, 打开便签</span><br><span class="line">Gui, Show,, 便签工具</span><br><span class="line">Return</span><br><span class="line"></span><br><span class="line">CreateNote:</span><br><span class="line">    ; 获取当前日期并构建文件名</span><br><span class="line">    FormatTime, CurrentDate,, %DateFormat%</span><br><span class="line">    NoteFile := FilePath . CurrentDate &quot;.txt&quot;</span><br><span class="line">    </span><br><span class="line">    ; 检查文件是否存在，如果不存在则创建</span><br><span class="line">    if (!FileExist(NoteFile)) &#123;</span><br><span class="line">        FileAppend,, %NoteFile%  ; 创建空文件</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    ; 打开文件</span><br><span class="line">    Run, %NoteFile%</span><br><span class="line">Return</span><br><span class="line"></span><br><span class="line">OpenNote:</span><br><span class="line">    ; 获取当前日期并构建文件名</span><br><span class="line">    FormatTime, CurrentDate,, %DateFormat%</span><br><span class="line">    NoteFile := FilePath . CurrentDate &quot;.txt&quot;</span><br><span class="line">    </span><br><span class="line">    ; 检查文件是否存在</span><br><span class="line">    if (FileExist(NoteFile)) &#123;</span><br><span class="line">        ; 读取文件内容</span><br><span class="line">        FileRead, NoteContent, %NoteFile%</span><br><span class="line">        </span><br><span class="line">        ; 创建提示框，并设置为始终在最顶层，背景透明</span><br><span class="line">        Gui, Note: +AlwaysOnTop +Caption +ToolWindow +Owner</span><br><span class="line">        Gui, Note: Font, s12, Verdana</span><br><span class="line">        Gui, Note: Color, FFFFFF  ; 设置半透明颜色</span><br><span class="line">        Gui, Note: Add, Text,, %NoteContent%</span><br><span class="line">        Gui, Note: Show, x750 y0  NoActivate, 今日便签</span><br><span class="line">        </span><br><span class="line">        ; 设置透明度</span><br><span class="line">        WinSet, Transparent, 200, 今日便签  ; 设置窗口透明度，255为不透明，0为完全透明</span><br><span class="line">        </span><br><span class="line">        ; 允许拖动整个窗口</span><br><span class="line">        ;Gui, Note: +Drag</span><br><span class="line"></span><br><span class="line">        ; 确保文本控件也透明</span><br><span class="line">        ControlGet, hText, Hwnd,, Static1, 今日便签</span><br><span class="line">        ; 设置窗口为鼠标穿透模式</span><br><span class="line">        DllCall(&quot;SetWindowLong&quot;, &quot;Ptr&quot;, hWnd, &quot;Int&quot;, -20, &quot;Ptr&quot;, 0x80000 | 0x20)  ; WS_EX_TRANSPARENT | WS_EX_LAYERED</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">        MsgBox, 48, 提示, 没有找到今天的便签文件。</span><br><span class="line">    &#125;</span><br><span class="line">Return</span><br><span class="line"></span><br><span class="line">GuiClose:</span><br><span class="line">ExitApp</span><br></pre></td></tr></table></figure></div>
<p>这样，我们就实现了一个始终置顶的便签小软件，可以方便地记录和查看每日的便签内容。</p>
]]></content>
      <tags>
        <tag>autohotkey</tag>
      </tags>
  </entry>
</search>
