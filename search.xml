<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Markdown常用语法</title>
    <url>/2024/08/15/Markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Hexo + Github搭建个人博客教程</title>
    <url>/2024/03/13/My-New-Post/</url>
    <content><![CDATA[<h1 id="这篇博客将会带来Hexo-Github搭建个人博客网站的教程"><a href="#这篇博客将会带来Hexo-Github搭建个人博客网站的教程" class="headerlink" title="这篇博客将会带来Hexo+Github搭建个人博客网站的教程"></a>这篇博客将会带来Hexo+Github搭建个人博客网站的教程</h1><hr>
<p><strong>首先我们需要在自己电脑上配置好  <strong>git</strong>  , <strong>node.js</strong>  和  <strong>npm</strong></strong><br>    1. <strong>git,node.js和npm</strong>的<strong>安装</strong>与<strong>配置</strong><br>首先我们到git官网<a class="link"   href="https://git-scm.com/"  title="点击连接直达">Git官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://huihuihuihui1.github.io/imgs/Download.png"
                      alt="这是图片"
                ><br>找到Download下载<br>根据自己的系统版本选择下载<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://huihuihuihui1.github.io/imgs/Git.png"
                      alt="这是图片"
                ><br><a class="link"   href="https://blog.csdn.net/mukes/article/details/115693833"  title="点击连接直达">Git安装教程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>    2. node和npm也跟着教程下载，链接如下：<br><a class="link"   href="https://blog.csdn.net/qq_39308408/article/details/97754889"  title="点击链接直达">node.js和npm安装教程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<blockquote>
<p>  <strong>查看git版本</strong>  </p>
<blockquote>
<pre><code> git -v  
</code></pre>
</blockquote>
<p>  <strong>查看node版本</strong>  </p>
<blockquote>
<pre><code> node -v  
</code></pre>
</blockquote>
<p>  <strong>查看npm版本</strong>  </p>
<blockquote>
<pre><code> npm -v      
</code></pre>
</blockquote>
</blockquote>
<h2 id="Github仓库创建"><a href="#Github仓库创建" class="headerlink" title="Github仓库创建"></a><strong>Github仓库创建</strong></h2><p>进入<a class="link"   href="https://github.com/" >Github官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>    1.  <strong>注册GitHub账号</strong>（已有账号可直接进行下一步）<br>选择sign up，跟着引导走，注册之后邮箱会收到一封Github的邮件，点击Github的链接确认注册<br>    2.  <strong>创建仓库</strong><br>进入个人主页，选择<strong>Creat repository</strong>   </p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">   **注意**  </span><br><span class="line">   选择public  </span><br><span class="line">   仓库名应为：用户名.github.io(这是博客域名)  </span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">## **连接GitHub仓库**</span><br><span class="line">1.  然后新建一个空白文件夹可命名为Blog在文件夹中右键，选择**Open Git Bash here**</span><br><span class="line">2.  输入代码连接GitHub仓库  </span><br></pre></td></tr></table></figure></div>
<pre><code>   git config --global user.name &quot;GitHub 用户名&quot;  
      git config --global user.email &quot;GitHub 邮箱&quot;  
</code></pre>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">**创建SSH**  </span><br><span class="line">输入  </span><br></pre></td></tr></table></figure></div>
<pre><code>   ssh-keygen -t rsa -C &quot;GitHub 邮箱&quot;  
</code></pre>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">然后一路回车。</span><br><span class="line">  </span><br><span class="line">**添加密钥**  </span><br><span class="line">进入 **[C:\Users\用户名\.ssh]** 目录，用记事本打开公钥**id_rsa.pub**文件并复制里面的内容。  </span><br><span class="line">![这是图片](https://huihuihuihui1.github.io/imgs/Photo1.png)  </span><br><span class="line">打开GitHub进入**Settings**页面，选择左边栏的**SSH and GPG keys**  </span><br><span class="line">![这是图片](https://huihuihuihui1.github.io/imgs/Photo2.png)   </span><br><span class="line">![这是图片](https://huihuihuihui1.github.io/imgs/Photo3.png)  </span><br><span class="line">点击**New SSH key**。  </span><br><span class="line">![这是图片](https://huihuihuihui1.github.io/imgs/Photo4.png)  </span><br><span class="line">**Title**随便写，粘贴复制的**id_rsa.pub**内容到**Key**中，点击**Add SSH key**完成添加。</span><br><span class="line">![这是图片](https://huihuihuihui1.github.io/imgs/Photo5.png)  </span><br><span class="line">**验证连接：**  </span><br><span class="line">打开 **Git Bash**，输入  </span><br></pre></td></tr></table></figure></div>
<p>  ssh -T <a class="link"   href="mailto:&#103;&#105;&#116;&#64;&#x67;&#x69;&#116;&#104;&#x75;&#98;&#x2e;&#x63;&#111;&#x6d;" >&#103;&#105;&#116;&#64;&#x67;&#x69;&#116;&#104;&#x75;&#98;&#x2e;&#x63;&#111;&#x6d; <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>  </p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">出现 **“Are you sure……”**，输入 **yes** 回车确认。  </span><br><span class="line">显示  **“Hi xxx! You&#x27;ve successfully……”**  即连接成功。</span><br><span class="line">### **安装hexo**  </span><br><span class="line">在**Git Bash**下载**hexo**程序  </span><br></pre></td></tr></table></figure></div>
<pre><code>   npm install -g hexo-cli  
</code></pre>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">若下载失败或速度太慢可使用淘宝镜像，输入以下代码连接  </span><br></pre></td></tr></table></figure></div>
<pre><code>   npm config set registry https://registry.npmmirror.com  
</code></pre>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">可使用以下代码查看是否正确连接  </span><br></pre></td></tr></table></figure></div>
<pre><code>   npm config get registry  
</code></pre>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">连接成功后可加快下载速度  </span><br><span class="line">### **hexo**的初始化和本地预览  </span><br><span class="line">**初始化并安装所需组件：**  </span><br></pre></td></tr></table></figure></div>
<pre><code>   hexo init      # 初始化  
   npm install    # 安装组件  
</code></pre>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">**完成后依次输入以下命令，在本地预览：**  </span><br></pre></td></tr></table></figure></div>
<pre><code>   hexo g # 生成页面  
</code></pre>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></div>
<pre><code> hexo s # 启动预览  
</code></pre>
<pre><code>
**访问 https://localhost:4000 ，出现hexo默认页面，本地博客安装成功**  
### 部署hexo页面到GitHub Pages  
**安装 hexo-deployer-git:**(上传需使用的插件)  
&gt;       npm install hexo-deployer-git --save  
&gt;   

**修改_config.yml文件末尾的Deployment部分如下**  
&gt;       deploy:  
&gt;         type: git  
&gt;         repository: git@github.com:用户名/用户名.github.io.git  
&gt;         branch: main  
&gt; 
**注：**_config.yml文件可使用记事本打开，修改完成后保存。  
完成后运行以下命令，将网站上传部署到Github Pages。  
&gt;       hexo d  
&gt;  

这样我们就能直接用以下链接找到我们创建的个人博客  
&gt;       https://用户名.github.io
&gt;   
</code></pre>
]]></content>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>自动化工具AutoHotKey推荐</title>
    <url>/2024/08/15/%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7AutoHotKey%E6%8E%A8%E8%8D%90/</url>
    <content><![CDATA[<h1 id="自动化工具AutoHotKey推荐"><a href="#自动化工具AutoHotKey推荐" class="headerlink" title="自动化工具AutoHotKey推荐"></a>自动化工具AutoHotKey推荐</h1><h2 id="1-自动化工具AutoHotKey"><a href="#1-自动化工具AutoHotKey" class="headerlink" title="1. 自动化工具AutoHotKey"></a>1. 自动化工具AutoHotKey</h2><ul>
<li>autohotkey是一款开源的自动化工具，可以用来模拟键盘和鼠标操作，实现自动化任务。</li>
<li>它可以用来实现各种自动化任务，比如自动填写表单、自动点击按钮、自动滚动页面等等。</li>
<li>autohotkey的语法比较简单，容易上手，而且功能强大，可以满足各种自动化需求。</li>
<li><strong><a class="link"   href="https://www.autohotkey.com/" >下载连接 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></strong></li>
</ul>
<hr>
<h2 id="2-推荐理由"><a href="#2-推荐理由" class="headerlink" title="2. 推荐理由"></a>2. 推荐理由</h2><ul>
<li>autohotkey是一款开源的自动化工具，可以用来模拟键盘和鼠标操作，实现自动化任务。</li>
<li>它可以用来实现各种自动化任务，比如自动填写表单、自动点击按钮、自动滚动页面等等。</li>
<li>autohotkey的语法比较简单，容易上手，而且功能强大，可以满足各种自动化需求。</li>
<li>autohotkey的社区非常活跃，有很多现成的脚本可以参考，也可以自己编写脚本。</li>
<li>autohotkey的脚本可以很容易地移植到其他操作系统上，比如Windows、Mac、Linux等等。</li>
</ul>
<hr>
<h2 id="3-下载安装"><a href="#3-下载安装" class="headerlink" title="3. 下载安装"></a>3. 下载安装</h2><ul>
<li>安装<a class="link"   href="https://www.autohotkey.com/" >autohotkey <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br> 按照官网说明下载安装autohotkey，安装过程全部next就行。<br> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/./imgs/autohotkey%E5%AE%98%E7%BD%91.png"
                      alt="autohotkey官网"
                ></li>
<li>下载autohotkey的编译器<br> 可在主流编译器中添加autohotkey或ahk插件<br> 或者可以下载adventure，adventure是一款用于autohotkey脚本的编译器。或者下载Adventure-CN，Adventure-CN是河许人在adventure编辑器基础上翻译开发更贴近中文开发者的编辑器，目标是使中文Autohotkey开发者更轻松，更便捷的开发Autohotkey脚本。<br> 下载地址：<a class="link"   href="https://www.autoahk.com/archives/15290" >Adventure-CN <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>  若下载地址不可用，可联系笔者获取</li>
</ul>
<hr>
<h2 id="4-代码演示"><a href="#4-代码演示" class="headerlink" title="4. 代码演示"></a>4. 代码演示</h2><h2 id="例如"><a href="#例如" class="headerlink" title=" 例如"></a> 例如<br><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">; 按下F1键，自动打开记事本</span><br><span class="line">F1::</span><br><span class="line">Run notepad.exe</span><br><span class="line">return</span><br></pre></td></tr></table></figure></div><br><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">; 按下F2键，自动点击指定位置</span><br><span class="line">F2::</span><br><span class="line">Click 100, 200</span><br><span class="line">return</span><br></pre></td></tr></table></figure></div><br><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">; 按下F3键，自动滚动页面</span><br><span class="line">F3::</span><br><span class="line">WheelDown</span><br><span class="line">return</span><br></pre></td></tr></table></figure></div><br><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">#Warn</span><br><span class="line">; 创建可视化窗口</span><br><span class="line">MyGUI := GUI()</span><br><span class="line">;创建文本提示</span><br><span class="line">MyGUI.add(&quot;Text&quot;,,&quot;请输入点击点的x，y坐标&quot;)</span><br><span class="line">;创建输入框</span><br><span class="line">MyGUI.add(&quot;Edit&quot;,&quot;vEdit1&quot;)</span><br><span class="line">MyGUI.add(&quot;Edit&quot;,&quot;vEdit2&quot;)</span><br><span class="line">;创建按钮</span><br><span class="line">Btn1 := MyGUI.add(&quot;Button&quot;,&quot;&quot;,&quot;开始点击&quot;)</span><br><span class="line">;显示窗口</span><br><span class="line">MyGUI.show()</span><br><span class="line">;点击按钮-&gt;响应函数</span><br><span class="line">Btn1.OnEvent(&quot;Click&quot;, 自动点击)</span><br><span class="line">;响应函数</span><br><span class="line">自动点击(*)</span><br><span class="line">&#123;</span><br><span class="line">    ;将窗口中的变量储存</span><br><span class="line">    saved := MyGUI.submit()</span><br><span class="line">    ;鼠标移动到相应坐标，最后一个参数为速度，0最快</span><br><span class="line">    MouseMove saved.Edit1, saved.Edit2, 20</span><br><span class="line">    ;点击，默认left左键点击</span><br><span class="line">    Click</span><br><span class="line">    ;</span><br><span class="line">    MyGUI.show()</span><br><span class="line">    Return</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></h2><h2 id="5-推荐链接"><a href="#5-推荐链接" class="headerlink" title="5. 推荐链接"></a>5. 推荐链接</h2><p><a class="link"   href="https://www.autohotkey.com/" >Autohotkey官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><a class="link"   href="https://www.autohotkey.com/docs/v1/" >autohotkey官方社区v1.1 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><a class="link"   href="https://www.autohotkey.com/docs/v2/" >autohotkey官方社区v2 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><a class="link"   href="https://www.autoahk.com/" >autohotkey中文社区 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <tags>
        <tag>工具推荐</tag>
        <tag>Autohotkey</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2024/08/13/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
  </entry>
</search>
